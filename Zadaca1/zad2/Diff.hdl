CHIP Diff {
    IN a[16], b[16];  // 
    OUT out[16]; // 

    PARTS:
	Xor(a = a[0], b = b[0], out = xor0);
    Xor(a = a[1], b = b[1], out = xor1);
    Xor(a = a[2], b = b[2], out = xor2);
    Xor(a = a[3], b = b[3], out = xor3);
    Xor(a = a[4], b = b[4], out = xor4);
    Xor(a = a[5], b = b[5], out = xor5);
    Xor(a = a[6], b = b[6], out = xor6);
    Xor(a = a[7], b = b[7], out = xor7);
    Xor(a = a[8], b = b[8], out = xor8);
    Xor(a = a[9], b = b[9], out = xor9);
    Xor(a = a[10], b = b[10], out = xor10);
    Xor(a = a[11], b = b[11], out = xor11);
    Xor(a = a[12], b = b[12], out = xor12);
    Xor(a = a[13], b = b[13], out = xor13);
    Xor(a = a[14], b = b[14], out = xor14);
    Xor(a = a[15], b = b[15], out = xor15);
	
	Add16 (a = false, b[0] = xor0, out = rez1);
	Add16 (a = rez1, b[0] = xor1, out = rez2 );
	Add16 (a = rez2, b[0] = xor2, out = rez3 );
	Add16 (a = rez3, b[0] = xor3, out = rez4 );
	Add16 (a = rez4, b[0] = xor4, out = rez5 );
	Add16 (a = rez5, b[0] = xor5, out = rez6 );
	Add16 (a = rez6, b[0] = xor6, out = rez7 );
	Add16 (a = rez7, b[0] = xor7, out = rez8 );
	Add16 (a = rez8, b[0] = xor8, out = rez9 );
	Add16 (a = rez9, b[0] = xor9, out = rez10 );
	Add16 (a = rez10, b[0] = xor10, out = rez11 );
	Add16 (a = rez11, b[0] = xor11, out = rez12 );
	Add16 (a = rez12, b[0] = xor12, out = rez13 );
	Add16 (a = rez13, b[0] = xor13, out = rez14 );
	Add16 (a = rez14, b[0] = xor14, out = rez15 );
	Add16 (a = rez15, b[0] = xor15, out = out );
	
	
	
}